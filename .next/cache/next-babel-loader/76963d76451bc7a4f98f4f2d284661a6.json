{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/titomazzetta/Tito-Mazzetta-MIT-Bootcamp/Module-28/Resta/setting-up-stripe_starter 3/components/checkoutForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from \"react\";\nimport { useRouter } from 'next/router'; // Import useRouter\n\nimport { FormGroup, Label, Input, Modal, ModalBody } from \"reactstrap\"; // Import Modal components\n\nimport fetch from \"isomorphic-fetch\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport CardSection from \"./cardSection\";\nimport AppContext from \"./context\";\nimport Cookies from \"js-cookie\";\n\nfunction CheckoutForm() {\n  _s();\n\n  var _useState = useState({\n    address: \"\",\n    city: \"\",\n    state: \"\",\n    stripe_id: \"\"\n  }),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      showSuccessModal = _useState3[0],\n      setShowSuccessModal = _useState3[1]; // State for showing success modal\n\n\n  var stripe = useStripe();\n  var elements = useElements();\n  var appContext = useContext(AppContext);\n  var router = useRouter(); // Initialize useRouter hook\n\n  function onChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setData(_objectSpread(_objectSpread({}, data), {}, _defineProperty({}, name, value)));\n  }\n\n  function submitOrder() {\n    return _submitOrder.apply(this, arguments);\n  }\n\n  function _submitOrder() {\n    _submitOrder = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var cardElement, token, userToken, API_URL, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              cardElement = elements.getElement(CardElement);\n              _context.next = 3;\n              return stripe.createToken(cardElement);\n\n            case 3:\n              token = _context.sent;\n              userToken = Cookies.get(\"token\");\n\n              if (!token.error) {\n                _context.next = 8;\n                break;\n              }\n\n              setError(token.error.message);\n              return _context.abrupt(\"return\");\n\n            case 8:\n              API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n              _context.next = 11;\n              return fetch(\"\".concat(API_URL, \"/orders\"), {\n                method: \"POST\",\n                headers: {\n                  'Content-Type': 'application/json',\n                  Authorization: \"Bearer \".concat(userToken)\n                },\n                body: JSON.stringify({\n                  amount: Number(Math.round(appContext.cart.total + 'e2') + 'e-2'),\n                  dishes: appContext.cart.items,\n                  address: data.address,\n                  city: data.city,\n                  state: data.state,\n                  token: token.token.id\n                })\n              });\n\n            case 11:\n              response = _context.sent;\n\n              if (!response.ok) {\n                setError(response.statusText);\n              } else {\n                setShowSuccessModal(true); // Display success modal\n\n                setTimeout(function () {\n                  setShowSuccessModal(false); // Hide modal after 5 seconds\n\n                  router.push('/'); // Redirect to home page\n                }, 5000);\n              }\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _submitOrder.apply(this, arguments);\n  }\n\n  return __jsx(\"div\", {\n    className: \"paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(Modal, {\n    isOpen: showSuccessModal,\n    toggle: function toggle() {\n      return setShowSuccessModal(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, __jsx(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Order Success! Redirecting...\")));\n}\n\n_s(CheckoutForm, \"3vCIbga7dR2vSvDjAd1+VqcjinY=\", false, function () {\n  return [useStripe, useElements, useRouter];\n});\n\n_c = CheckoutForm;\nexport default CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["/Users/titomazzetta/Tito-Mazzetta-MIT-Bootcamp/Module-28/Resta/setting-up-stripe_starter 3/components/checkoutForm.js"],"names":["React","useState","useContext","useRouter","FormGroup","Label","Input","Modal","ModalBody","fetch","CardElement","useStripe","useElements","CardSection","AppContext","Cookies","CheckoutForm","address","city","state","stripe_id","data","setData","error","setError","showSuccessModal","setShowSuccessModal","stripe","elements","appContext","router","onChange","e","target","name","value","submitOrder","cardElement","getElement","createToken","token","userToken","get","message","API_URL","process","env","NEXT_PUBLIC_API_URL","method","headers","Authorization","body","JSON","stringify","amount","Number","Math","round","cart","total","dishes","items","id","response","ok","statusText","setTimeout","push"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useRouter } from 'next/router'; // Import useRouter\nimport { FormGroup, Label, Input, Modal, ModalBody } from \"reactstrap\"; // Import Modal components\nimport fetch from \"isomorphic-fetch\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport CardSection from \"./cardSection\";\nimport AppContext from \"./context\";\nimport Cookies from \"js-cookie\";\n\nfunction CheckoutForm() {\n  const [data, setData] = useState({\n    address: \"\",\n    city: \"\",\n    state: \"\",\n    stripe_id: \"\",\n  });\n  const [error, setError] = useState(\"\");\n  const [showSuccessModal, setShowSuccessModal] = useState(false); // State for showing success modal\n  const stripe = useStripe();\n  const elements = useElements();\n  const appContext = useContext(AppContext);\n  const router = useRouter(); // Initialize useRouter hook\n\n  function onChange(e) {\n    const { name, value } = e.target;\n    setData({ ...data, [name]: value });\n  }\n\n  async function submitOrder() {\n    const cardElement = elements.getElement(CardElement);\n    const token = await stripe.createToken(cardElement);\n    const userToken = Cookies.get(\"token\");\n\n    if (token.error) {\n      setError(token.error.message);\n      return;\n    }\n\n    const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n\n    const response = await fetch(`${API_URL}/orders`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userToken}`,\n      },\n      body: JSON.stringify({\n        amount: Number(Math.round(appContext.cart.total + 'e2') + 'e-2'),\n        dishes: appContext.cart.items,\n        address: data.address,\n        city: data.city,\n        state: data.state,\n        token: token.token.id,\n      }),\n    });\n\n    if (!response.ok) {\n      setError(response.statusText);\n    } else {\n      setShowSuccessModal(true); // Display success modal\n      setTimeout(() => {\n        setShowSuccessModal(false); // Hide modal after 5 seconds\n        router.push('/'); // Redirect to home page\n      }, 5000);\n    }\n  }\n\n  return (\n    <div className=\"paper\">\n      {/* Form Fields and Card Section here... */}\n      \n      {/* ... other form fields and CardSection component ... */}\n\n      {/* Success Modal */}\n      <Modal isOpen={showSuccessModal} toggle={() => setShowSuccessModal(false)}>\n        <ModalBody>\n          Order Success! Redirecting...\n        </ModalBody>\n      </Modal>\n      \n      {/* ... existing JSX and styling ... */}\n    </div>\n  );\n}\n\nexport default CheckoutForm;\n"]},"metadata":{},"sourceType":"module"}