{"ast":null,"code":"var _jsxFileName = \"/Users/titomazzetta/Tito-Mazzetta-MIT-Bootcamp/Module-29/working-restaurant-app* copy/components/dishes.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\nfunction Dishes({\n  restId\n}) {\n  const {\n    0: restaurantID,\n    1: setRestaurantID\n  } = useState();\n  const {\n    addItem\n  } = useContext(AppContext);\n  const GET_RESTAURANT_DISHES = gql`\n  query($id: ID!) {\n    restaurant(id: $id) {\n      id\n      name\n      dishes {\n        id\n        name\n        description\n        price\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n  const router = useRouter();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  let restaurant = data.restaurant;\n  if (restId > 0) {\n    return __jsx(React.Fragment, null, restaurant.dishes.map(res => __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      style: {\n        padding: 0\n      },\n      key: res.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 150,\n        width: 150\n      },\n      src: res.image ? `http://localhost:1337${res.image.url}` : 'path_to_some_default_image',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }), __jsx(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, __jsx(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, res.name), __jsx(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, res.description)), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      color: \"info\",\n      outline: true,\n      onClick: () => addItem(res),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"+ Add To Cart\"))))));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 18\n      }\n    }, \" No Dishes\");\n  }\n}\nexport default Dishes;","map":{"version":3,"names":["useRouter","gql","useQuery","useState","useContext","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Row","Col","Dishes","restId","restaurantID","setRestaurantID","addItem","GET_RESTAURANT_DISHES","router","loading","error","data","variables","id","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","restaurant","React","Fragment","dishes","map","res","xs","sm","style","padding","key","margin","top","height","width","src","image","url","name","description","className","color","outline","onClick"],"sources":["/Users/titomazzetta/Tito-Mazzetta-MIT-Bootcamp/Module-29/working-restaurant-app* copy/components/dishes.js"],"sourcesContent":["import {useRouter} from \"next/router\"\nimport {gql,useQuery} from '@apollo/client';\nimport {useState, useContext} from 'react'\nimport AppContext from \"./context\"\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col} from \"reactstrap\";\nfunction Dishes({restId}){\n  const [restaurantID, setRestaurantID] = useState()\n  const {addItem} = useContext(AppContext)\n\nconst GET_RESTAURANT_DISHES = gql`\n  query($id: ID!) {\n    restaurant(id: $id) {\n      id\n      name\n      dishes {\n        id\n        name\n        description\n        price\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n\n  const router = useRouter();\n\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: { id: restId},\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR here</p>;\n  if (!data) return <p>Not found</p>;\n\n  let restaurant = data.restaurant;\n\n  if (restId > 0){\n\n    return (\n      <>\n          {restaurant.dishes.map((res) => (\n            <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\n              <Card style={{ margin: \"0 10px\" }}>\n              <CardImg\n               top={true}\n                   style={{ height: 150, width: 150 }}\n                 src={res.image ? `http://localhost:1337${res.image.url}` : 'path_to_some_default_image'}\n/>\n                <CardBody>\n                  <CardTitle>{res.name}</CardTitle>\n                  <CardText>{res.description}</CardText>\n                </CardBody>\n                <div className=\"card-footer\">\n                <Button color=\"info\" outline onClick={() => addItem(res)}>\n                      + Add To Cart\n                      </Button>\n                  \n                </div>\n              </Card>\n            </Col>\n          ))}\n        </>\n        )}\n        else{\n          return <h1> No Dishes</h1>\n        }\n    }\n  \n    export default Dishes;"],"mappings":"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"},"metadata":{},"sourceType":"module"}